pipeline {
    agent any
    tools {
        maven 'maven-3.6.3'
    }
    stages {
        stage('Build') {
            steps {
                // Use Maven as the build automation tool
                sh 'mvn clean package'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                // Use JUnit for unit tests
                sh 'mvn test'
                // Use a suitable tool like Selenium, Cucumber, or Postman for integration tests
                sh 'run-integration-tests-command'
            }
        }
        stage('Code Analysis') {
            steps {
                // Use SonarQube for code analysis
                withSonarQubeEnv('SonarQube Server') {
                    sh 'mvn sonar:sonar'
                }
            }
        }
        stage('Security Scan') {
            steps {
                // Use OWASP ZAP for security scanning
                sh 'zap-cli --spider --scan --ajax-spider -t http://your-app-url'
            }
        }
        stage('Deploy to Staging') {
            steps {
                // Use AWS CLI or a deployment tool like Ansible or Docker to deploy to a staging server
                sh 'aws deploy your-staging-config'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                // Run integration tests on the staging environment
                sh 'run-staging-integration-tests-command'
            }
        }
        stage('Deploy to Production') {
            steps {
                // Use AWS CLI or a deployment tool like Ansible or Docker to deploy to a production server
                sh 'aws deploy your-production-config'
            }
        }
    }
    
    post {
        always {
            // Archive logs as attachments
            archiveArtifacts artifacts: 'logs/*.log'
        }
        success {
            // Send success notification email
            emailext (
                subject: "Pipeline Success",
                body: "The pipeline completed successfully.",
                to: "pranjalsinghofficial@gmail.com",
                attachLog: true,
                compressLog: true
            )
        }
        failure {
            // Send failure notification email
            emailext (
                subject: "Pipeline Failure",
                body: "The pipeline failed. Please investigate.",
                to: "pranjalsinghofficial@gmail.com",
                attachLog: true,
                compressLog: true
            )
        }
    }
}
